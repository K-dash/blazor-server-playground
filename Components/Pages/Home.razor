@page "/"
@using System.Collections.Generic

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h1 class="text-center mb-4">動的フィールド追加</h1>

            <RadzenAccordion>
                <Items>
                    <RadzenAccordionItem Text="フィールド編集" Icon="edit">
                        <div class="mt-3">
                            <div class="d-flex justify-content-center mb-4">
                                <RadzenButton Icon="add_circle_outline" Text="フィールド追加" Click="@AddField" ButtonStyle="ButtonStyle.Primary" />
                            </div>

                            @foreach (var field in fields)
                            {
                                <div class="row mb-3 align-items-center">
                                    <div class="col-md-9">
                                        <RadzenTextBox @bind-Value="@field.Value" Placeholder="値を入力" Class="w-100" />
                                    </div>
                                    <div class="col-md-2 text-end">
                                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Click="@(() => RemoveField(field))" />
                                    </div>
                                </div>
                            }

                            <div class="d-flex justify-content-center mt-4">
                                <RadzenButton Text="保存" Click="@SaveFields" ButtonStyle="ButtonStyle.Success" />
                            </div>
                        </div>
                    </RadzenAccordionItem>

                    @if (savedFields.Any())
                    {
                        <RadzenAccordionItem Text="保存された値" Icon="list" Selected="true">
                            <div class="mt-3">
                                <RadzenListBox TValue="string" Data="@savedFields" Class="w-100" />
                            </div>
                        </RadzenAccordionItem>
                    }
                </Items>
            </RadzenAccordion>
        </div>
    </div>
</div>

@code {
    private List<InputField> fields = new List<InputField>();
    private List<string> savedFields = new List<string>();

    private class InputField
    {
        public string Value { get; set; }
    }

    private void AddField()
    {
        fields.Add(new InputField());
    }

    private void RemoveField(InputField field)
    {
        fields.Remove(field);
    }

    private void SaveFields()
    {
        savedFields = fields.Select(f => f.Value).Where(v => !string.IsNullOrEmpty(v)).ToList();
    }
}

<style>
    .rz-button {
        border-radius: 20px;
    }
    .rz-textbox {
        border-radius: 0px;
    }
    .rz-accordion {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 15px;
        overflow: hidden;
    }
    .rz-accordion-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
    }
    .rz-accordion-content {
        padding: 1rem;
    }
</style>
